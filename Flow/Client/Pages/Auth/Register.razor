@page "/register"
@inject HttpClient Http
@inject NavigationManager Navigation
@inject ILocalStorageService LocalStorage

<div class="auth-container">
    <h3>Criar Nova Conta</h3>
    
    <EditForm Model="@registerModel" OnValidSubmit="HandleRegister">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="form-group">
            <label>Nome Completo</label>
            <InputText @bind-Value="registerModel.FullName" class="form-control" />
        </div>

        <div class="form-group">
            <label>Username</label>
            <InputText @bind-Value="registerModel.Username" class="form-control" />
        </div>

        <div class="form-group">
            <label>Password</label>
            <InputText type="password" @bind-Value="registerModel.Password" class="form-control" />
        </div>

        <button type="submit" class="btn btn-primary">Registrar</button>
    </EditForm>

    @if (!string.IsNullOrEmpty(errorMessage))
    {
        <div class="alert alert-danger mt-3">@errorMessage</div>
    }
</div>

@code {
    private RegisterRequest registerModel = new();
    private string errorMessage = string.Empty;

    private async Task HandleRegister()
    {
        try
        {
            var response = await Http.PostAsJsonAsync("api/auth/register", registerModel);
            
            if (response.IsSuccessStatusCode)
            {
                Navigation.NavigateTo("/login");
            }
            else
            {
                errorMessage = await response.Content.ReadAsStringAsync();
            }
        }
        catch
        {
            errorMessage = "Erro ao registrar usuário";
        }
    }

    public class RegisterRequest
    {
        public string FullName { get; set; } = string.Empty;
        public string Username { get; set; } = string.Empty;
        public string Password { get; set; } = string.Empty;
    }
}