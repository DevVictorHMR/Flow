@page "/feedbacks"
@using Microsoft.AspNetCore.Authorization
@using Flow.Core.Interfaces
@using Flow.Shared.Dtos
@attribute [Authorize]
@inject HttpClient Http
@inject IFeedbackService FeedbackService

<div class="feedbacks-container">
    <h3>Feedbacks Recebidos</h3>

    @if (feedbacks == null)
    {
        <p>Carregando feedbacks...</p>
    }
    else if (!feedbacks.Any())
    {
        <p>Nenhum feedback recebido ainda</p>
    }
    else
    {
        <div class="feedback-list">
            @foreach (var feedback in feedbacks)
            {
                <div class="feedback-card">
                    <div class="feedback-header">
                        <span class="sender">@feedback.SenderName</span>
                        <span class="date">@feedback.CreatedAt.ToShortDateString()</span>
                    </div>
                    <div class="feedback-content">
                        @feedback.Content
                    </div>
                </div>
            }
        </div>
    }
</div>

@code {
    private List<FeedbackDto> feedbacks = new();

    protected override async Task OnInitializedAsync()
    {
        try
        {
            // Obter feedbacks via API
            var response = await Http.GetAsync("api/feedbacks/received");

            if (response.IsSuccessStatusCode)
            {
                feedbacks = await response.Content.ReadFromJsonAsync<List<FeedbackDto>>();
            }
        }
        catch
        {
            // Tratar erro
        }
    }
}